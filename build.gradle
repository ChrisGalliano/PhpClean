plugins {
    id 'org.jetbrains.intellij' version '0.3.5'
    id 'org.jetbrains.kotlin.jvm' version '1.2.51'
}
repositories {
    mavenCentral()
    maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }
}
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
patchPluginXml {
    changeNotes project.property("changeNotes").toString().replace("\n", "<br>\n")
}

if (file('local.properties').exists()) {
    apply from: 'local.properties'
}
intellij {
    version ideaVersion
    sandboxDirectory project.rootDir.canonicalPath + "/build/idea-sandbox"
    downloadSources Boolean.valueOf(downloadIdeaSources)
    updateSinceUntilBuild = false
    pluginName name
    plugins = [
            "com.jetbrains.php:${phpPluginVersion}",
            'CSS',
            'java-i18n',
            'PsiViewer:3.28.93',
            'properties'
    ]
}
jar.archiveName = "${name}.jar"

task deployFtp(type: Exec) {
    def ci_ftp_host = project.hasProperty("ftp_host") ? project.property("ftp_host").toString() : System.getenv("ftp_host")
    def ci_ftp_password = project.hasProperty("ftp_password") ? project.property("ftp_password").toString() : System.getenv("ftp_password")
    def ci_ftp_login = project.hasProperty("ftp_login") ? project.property("ftp_login").toString() : System.getenv("ftp_login")
    commandLine "curl", "--max-time 15", "-T", "{build/libs/PhpClean.jar,build/libs/PhpClean-nightly.xml}", "ftp://${ci_ftp_login}:${ci_ftp_password}@${ci_ftp_host}/"
}
task patchRepositoryXml(type: Copy) {
    from 'src/ci/PhpClean-nightly.xml'
    into "${buildDir}/libs"
    expand([
            buildDate : System.currentTimeMillis(),
            fileSize  : '18000',
            version   : project.property("version").toString(),
            pluginName: project.property("pluginName"),
            fileName  : jar.archiveName,
            group     : project.property("group")
    ])
    doFirst {
        ant.defaultexcludes remove: "${buildDir}/libs/*.xml"
    }
}
apply plugin: "idea"
apply plugin: "kotlin"
apply plugin: "org.jetbrains.intellij"